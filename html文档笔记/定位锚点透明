## `position定位属性和属性值

position：static、absolute（绝对定位）、relative（相对定位）、fixed（固定定位 ）；

元素定位后可以触发5个定位的属性：
													4个方向left、right、top、bottom
													1个层级关系   z-index		**staic**：默认值
		**static**： 元素使用默认值后，用来取消定位，其他定位就不可以使用
		**relative**：（相对定位）
							以自己的块元素为标准 ，不会影响别的块元素。可以设负值。
							left和right不能同时使用   
							后面的元素不受影响  元素先前的位置还占位
				1、相对定位后，元素占位
				2、相对定位后，是根据自己的原位置移动
				3、可以使用定位属性
		**absolute**：（绝对定位）绝对定位不占位，元素和文档流都不占位
													定位是以**最近**的设置**有定位**的**父元素**为基准的
			1、绝对定位后，元素不占位
			2、绝对定位先找最近的、有定位属性的父元素，如果没有这个父元素，那么根据浏览器窗口移动
			3、绝对定位可以使用定位属性
			4、绝对定位会影响元素类型的特性
						块元素：宽度由内容撑开，不是独占一行
						内联元素：加完绝对定位，就可以设置宽高

​		绝对、对定位结合使用：父元素设置定位（有其他内容要设置相对定位）
​													子元素也设置定位（相对、绝对定位看情况）
​													子元素根据父元素的边框进行上下左右定位移动
​	**fixed**（固定定位）对象遵从绝对定位方法，但要遵循一些方法，ie6不支持
​				可以固定在网页上  随网页上下滚动    
​				position：fixed；1、不占位
​												2、固定定位的元素始终以窗口为参照物位置
​												3、可以使用定位属性 

## 元素定位的层级属性

**z-index**：auto |  number
	auto：默认值，遵从其父对象
	number：无单位的整数值，**可为负数**
	只能是定位属性元素使用
	**此属性仅作用于**    position属性值   relative  或  absolute  或  fixed  的对象 
	没有设置z-index时，最后写的对象优先显示在上层，设置后，数值越大，层数	越靠上
	**负值的z-index定位元素**<先写的普通元素<后写的普通元素<定位元素<有z-inder值得定位 元素
	**较**大数值的对象会覆盖在较小数值对象之上，如两个绝对定位对象的此属性	具	有同样的number值，那么将依据他们在html文档中声明的顺序层叠

## 包含块的概念及作用

**包含块是绝对定位的基础**
为绝对定位元素提供坐标，偏移和显示范围的参照物
默认下body是一个大的包含块

## 锚点链接的语法和应用场景

同一个网页的转跳
1、给元素定义命名锚记名
		<标记 id=“命名锚记名”></标记>
2、命名锚记链接  
		<a href="#命名锚记名称”></a>

内容div  写个id  名字 （只能用id）
a  链接的href里面写上#（id的名字）

## 透明写法

opacity：0-0.1-0.9-11；盒子里的内容也一起变透明，可以是占位隐藏

## Flash和滚动字幕

1、插入Flash
    1、语法：
<  object width="value” height=“value” >
		< param   name="movie"    value+"flash路径及全称">
		< embed  width="value"   height="value"  src="flash路径及全称">< /embed>
< /object>

2、透明
	< param name ="wmode" value="transparent">

3、< marquee **behavior**（行为）=“scroll（滚动）、alternate（晃动）”     **direction**（方向）=“up（从上向下）、down、left、right”


param标签的value
embed标签的src



相对定位 占位  在原位置移动
绝对定位   不占位   以有定位元素的父元素为参照物移动

## 中心放大

margin-left:放大前的宽—放大后 的宽
margin-right:放大前的高—放大后 的高

定位  同理margin